import networkx as nx

'''
Grid Graphs
'''
# 3x3 grid
# a = nx.Graph()
# a.add_nodes_from([0,1,2,3,4,5,6,7,8]) 
# a.add_edges_from([(0,1),(1,2),(2,5),(1,4),(0,3),(3,4),(4,5),(3,6),(4,7),(5,8),(6,7),(7,8)])

# 4x4 grid
# b = nx.Graph()
# b.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]) 
# b.add_edges_from([(0,1),(1,2),(2,3),(3,7),(2,6),(1,5),(0,4),(4,5),(5,6),(6,7),(8,9),(9,10),(10,11),(12,13),(13,14),(14,15),(7,11),(6,10),(5,9),(4,8),(11,15),(10,14),(9,13),(8,12)])

# 4x3 grid
# c = nx.Graph()
# c.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11])
# c.add_edges_from([(0,1),(1,2),(2,3),(0,4),(1,5),(2,6),(3,7),(4,5),(5,6),(6,7),(8,9),(9,10),(10,11),(4,8),(5,9),(6,10),(7,11),])

#6x3 grid
# d = nx.Graph()
# d.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17])
# d.add_edges_from([(0,1),(1,2),(2,3),(5,6),(6,7),(8,9),(9,10),(10,11),(0,4),(1,5),(2,6),(3,7),(4,8),(5,9),(6,10),(7,11),
                #   (3,12),(12,13),(7,14),(14,15),(11,16),(16,17),(12,14),(13,15),(14,16),(15,17)])
                
# 5x3 Grid 
# e = nx.Graph()
# e.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]) 
# e.add_edges_from([(0,1),(1,2),(2,5),(1,4),(0,3),(3,4),(4,5),(3,6),(4,7),(5,8),(6,7),
#                   (7,8),(6,9), (7,10), (8,11), (9,10), (10,11), (12,13), (13,14),(9,12), (10,13), (11,14)])

# 2x3 grid 
# f = nx.Graph()
# f.add_nodes_from([0,1,2,3,4,5])
# f.add_edges_from([(0,1),(2,3),(4,5),(0,2),(1,3),(2,4),(3,5)])

'''
9 Vertex graphs
'''
# 9 vertex #1
# 9a = nx.Graph()
# 9a.add_nodes_from([0,1,2, 3, 4, 5, 6, 7, 8])
# 9a.add_edges_from([(0,1), (6, 5), (6, 7), (0, 5), (1, 2), (3, 4), (1, 5), (2, 5), (2, 6), (3, 6), (3, 7), (4, 7), (6, 8), (7, 8)])

# 9 vertex #2 
# 9b = nx.Graph() # Make an empty graph
# 9b.add_nodes_from([0,1,2,3,4,5,6,7,8]) # Add nodes 1 through 9
# 9b.add_edges_from([(0,1), (0,2), (0,3), (1,2), (1,4), (1,5), (2,3), (3,4), (3,7), (4,5), (4,7), (5,6), (5,8), (6,7), (6,8), (7,8)]) 

# 9 vertex #3 (disconnected and ergodic)
# 9c = nx.Graph()
# 9c.add_nodes_from([0,1,2,3,4,5,6,7,8])
# 9c.add_edges_from([(0,1),(0,2),(1,3),(2,3),(2,4),(3,5),(2,5),(4,5),(6,7),(6,8),(7,8)])

# 9 vertex #4
# Not uniform
# 9d = nx.Graph()
# 9d.add_nodes_from([0,1,2,3,4,5,6,7,8])
# 9d.add_edges_from([(0,1),(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(1,3),(0,7),(1,7),(1,5),(1,6)])

# 9 vertex #5
# 9e =nx.Graph() 
# 9e.add_nodes_from([0,1,2,3,4,5,6,7,8]) 
# 9e.add_edges_from([(0,1),(1,2),(2,3),(3,4),(1,5),(2,6),(3,7),(0,5),(4,7),(2,5),(3,6),(5,6),(6,7),(5,8),(7,8),(6,8)])

# 9 vertex #6
# 9f =nx.Graph() 
# 9f.add_nodes_from([0,1,2,3,4,5,6,7,8]) 
# 9f.add_edges_from([(0,1),(1,2),(2,3),(3,4),(1,5),(2,6),(3,7),(0,5),(4,7),(2,5),(3,6),(5,6),(6,7),(5,8)])

# Loop graph 
# 9g = nx.Graph()
# 9g.add_nodes_from([0,1,2,3,4,5,6,7,8]) 
# 9g.add_edges_from([(0,1),(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(8,0)])

# disconnected graph 
# 9h = nx.Graph()
# 9h.add_nodes_from([0,1,2,3,4,5,6,7,8]) 
# 9h.add_edges_from([(0,1),(1,2),(2,0),(3,4),(4,5),(5,3),(6,7),(7,8),(8,6)])

# disconnected graph 
# 9i = nx.Graph()
# 9i.add_nodes_from([0,1,2,3,4,5,6,7,8]) 
# 9i.add_edges_from([(0,1),(1,2),(2,0),(3,4),(4,5),(5,3),(6,7),(7,8),(8,6),(4,7),(8,3)])

'''
12 Vertex graphs
'''
# 4x3 grid with 2 diagonals #1
# 12a = nx.Graph()
# 12a.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11])
# 12a.add_edges_from([(0,1),(1,2),(2,3),(0,4),(1,5),(2,6),(3,7),(4,5),(5,6),(6,7),(8,9),(9,10),(10,11),(4,8),(5,9),(6,10),(7,11),(0,5),(5,10)])
# stationaryTransitionComplex(d, 3)

# 4x3 grid with one loop
# 12b = nx.Graph()
# 12b.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11])
# 12b.add_edges_from([(0,1),(1,2),(2,3),(5,6),(6,7),(8,9),(9,10),(10,11),(0,4),(1,5),(2,6),(3,7),(4,8),(5,9),(6,10),(7,11)])

# 4x3 grid with 1 diagonal
# 12c = nx.Graph()
# 12c.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11])
# 12c.add_edges_from([(0,1),(1,2),(2,3),(0,4),(1,5),(2,6),(3,7),(4,5),(5,6),(6,7),(8,9),(9,10),(10,11),(4,8),(5,9),(6,10),(7,11),(0,5)])

# ##4x3 grid w/ 2 diagonals #2
# 12d = nx.Graph()
# 12d.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11])
# 12d.add_edges_from([(0,1),(1,2),(2,3),(0,4),(1,5),(2,6),(3,7),(4,5),(5,6),(6,7),(8,9),(9,10),(10,11),(4,8),(5,9),(6,10),(7,11),(0,5),(5,10),(3,6),(5,10)])

#durer graph
# 12e = nx.Graph()
# 12e.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11])
# 12e.add_edges_from([(0,1),(1,2),(2,3),(3,4),(4,5),(0,5),(0,7),(1,8),(2,9) \
#                       ,(3,10),(4,11),(5,6),(6,8),(7,11),(8,10),(6,10),(7,9),(9,11)])

'''
20 Vertex graphs
'''
#fulbrene graph
# 20a = nx.Graph()
# 20a.add_nodes_from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19])
# 20a.add_edges_from([(0,1),(0,4),(0,6),(1,2),(1,7),(2,3),(2,8),(3,4),(3,9) \
#                          ,(4,5),(5,10),(5,11),(6,11),(6,12),(7,12),(7,13),(8,13) \
#                          ,(8,14),(9,14),(9,10),(10,16),(11,17),(12,18),(13,19) \
#                          ,(14,15),(15,16),(15,19),(16,17),(17,18),(18,19)])

